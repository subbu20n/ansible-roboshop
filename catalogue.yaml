- name: configure catalogue component 
  hosts: catalogue
  become: yes
  tasks:
  - name: disable nodejs
    ansible.builtin.command: dnf module disable nodejs -y 

  - name: enable nodejs:20 
    ansible.builtin.command: dnf module enable nodejs:20 -y 

  - name: install nodejs 
    ansible.builtin.dnf:
      name: nodejs
      state: installed 

  - name: create robosho system user
    ansible.builtin.user: 
      name: roboshop
      shell: /sbin/nologin
      home: /app

  - name: create app directory 
    ansible.builtin.file:
      path: /app

  - name: Download catalogue code
    ansible.builtin.get_url:
       url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
       dest: /tmp/catalogue.zip

  - name: extract catalogue code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: insatll dependencies
    community.general.npm:
      path: /app    

  - name: copy catalogue service
    ansible.builtin.copy:
       src: catalogue.service
       dest: /etc/systemd/system/catalogue.service

  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable catalogue 
    ansible.builtin.service:
      name: catalogue 
      state: started
      enabled: yes

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongo.repo 
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
       name: mongodb-mongosh
       state: present

  - name: check product loaded or not 
    ansible.builtin.command: mongosh --host mongodb.subbuaws.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output  

  - name: print catalogue output 
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load products 
    ansible.builtin.shell: mongosh --host mongodb.subbuaws.site </app/db/master-data.js   
    when: catalogue_output.stdout | int < 0                                                      